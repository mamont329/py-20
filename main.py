import random
import time


class Hero:
    def __init__(self, name, health=100):
        self.name = name
        self.health = health
        self.attacks = {
            "–û–±—ã—á–Ω–∞—è –∞—Ç–∞–∫–∞": random.randint(15, 25),
            "–°–∏–ª—å–Ω—ã–π —É–¥–∞—Ä": random.randint(20, 30),
            "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä": random.randint(25, 40),
            "–¢–æ—á–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª": random.randint(10, 35)
        }

    def perform_attack(self):
        attack_name, attack_power = random.choice(list(self.attacks.items()))
        return attack_name, attack_power

    def take_damage(self, damage):
        self.health -= damage
        if self.health < 0:
            self.health = 0

    def is_alive(self):
        return self.health > 0


class Game:
    def __init__(self):
        player_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –≥–µ—Ä–æ—è: ")
        self.player = Hero(player_name)
        self.computer = Hero("–ö–æ–º–ø—å—é—Ç–µ—Ä")
        self.round_num = 1

    def show_health(self):
        print(f"\n{self.player.name}: {self.player.health} HP  |  {self.computer.name}: {self.computer.health} HP")
        print("-" * 40)

    def perform_round(self, attacker, defender):
        print(f"\n–†–∞—É–Ω–¥ {self.round_num}:")
        attack_name, attack_power = attacker.perform_attack()

        print(f"{attacker.name} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç '{attack_name}' –∏ –Ω–∞–Ω–æ—Å–∏—Ç {attack_power} —É—Ä–æ–Ω–∞!")
        defender.take_damage(attack_power)

        self.show_health()
        self.round_num += 1
        time.sleep(1.5)

    def start(self):
        print("\n‚öîÔ∏è –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ë–∏—Ç–≤–∞ –ì–µ—Ä–æ–µ–≤! ‚öîÔ∏è")
        print(f"{self.player.name} vs {self.computer.name}")
        print("=" * 40)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫—Ç–æ –∞—Ç–∞–∫—É–µ—Ç –ø–µ—Ä–≤—ã–º —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
        current_attacker = self.player if random.choice([True, False]) else self.computer

        while self.player.is_alive() and self.computer.is_alive():
            defender = self.computer if current_attacker == self.player else self.player
            self.perform_round(current_attacker, defender)
            current_attacker = defender

        self.declare_winner()

    def declare_winner(self):
        print("\n" + "=" * 40)
        if self.player.is_alive():
            print(f"üéâ {self.player.name} –ø–æ–±–µ–∂–¥–∞–µ—Ç! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ")
        else:
            print(f"‚ò†Ô∏è {self.computer.name} –ø–æ–±–µ–∂–¥–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑! ‚ò†Ô∏è")
        print("=" * 40)


if __name__ == "__main__":
    print("üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–ë–∏—Ç–≤–∞ –ì–µ—Ä–æ–µ–≤'! üî•")
    while True:
        game = Game()
        game.start()

        play_again = input("\n–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ").lower()
        if play_again != '–¥–∞':
            print("\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –î–æ –≤—Å—Ç—Ä–µ—á–∏!")
            break